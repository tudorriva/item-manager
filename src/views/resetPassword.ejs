<% layout('layouts/main') %>

<h1>Reset Password</h1>

<form id="resetPasswordForm">
  <div>
    <label for="password">New Password:</label>
    <input type="password" name="password" id="password" required minlength="8">
  </div>
  <div>
    <label for="passwordConfirm">Confirm Password:</label>
    <input type="password" name="passwordConfirm" id="passwordConfirm" required minlength="8">
  </div>
  <button type="submit">Reset Password</button>
</form>

<div id="result" style="margin-top: 20px; display: none;"></div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const pathParts = window.location.pathname.split('/');
  const token = pathParts[pathParts.length - 1];
  
  document.getElementById('resetPasswordForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const password = document.getElementById('password').value;
    const passwordConfirm = document.getElementById('passwordConfirm').value;
    
    if (password !== passwordConfirm) {
      const resultDiv = document.getElementById('result');
      resultDiv.style.display = 'block';
      resultDiv.textContent = 'Passwords do not match!';
      resultDiv.style.backgroundColor = '#f8d7da';
      resultDiv.style.color = '#721c24';
      resultDiv.style.padding = '10px';
      resultDiv.style.borderRadius = '4px';
      return;
    }
    
    try {
      const response = await fetch(`/api/auth/reset-password/${token}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ password, passwordConfirm: password })
      });
      
      const data = await response.json();
      
      const resultDiv = document.getElementById('result');
      resultDiv.style.display = 'block';
      
      if (data.status === 'success') {
        resultDiv.textContent = 'Password reset successful! Redirecting to login...';
        resultDiv.style.backgroundColor = '#d4edda';
        resultDiv.style.color = '#155724';
        resultDiv.style.padding = '10px';
        resultDiv.style.borderRadius = '4px';
        
        // Store the token if provided
        if (data.token) {
          localStorage.setItem('token', data.token);
          setTimeout(() => window.location.href = '/items', 1500);
        } else {
          setTimeout(() => window.location.href = '/login', 1500);
        }
      } else {
        resultDiv.textContent = data.message || 'An error occurred';
        resultDiv.style.backgroundColor = '#f8d7da';
        resultDiv.style.color = '#721c24';
        resultDiv.style.padding = '10px';
        resultDiv.style.borderRadius = '4px';
      }
    } catch (err) {
      const resultDiv = document.getElementById('result');
      resultDiv.style.display = 'block';
      resultDiv.textContent = 'An error occurred. Please try again.';
      resultDiv.style.backgroundColor = '#f8d7da';
      resultDiv.style.color = '#721c24';
      resultDiv.style.padding = '10px';
      resultDiv.style.borderRadius = '4px';
    }
  });
});
</script>