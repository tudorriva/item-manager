<% layout('layouts/main') %>

<div class="container my-4">
  <h1>Inventory Statistics</h1>
  
  <!-- Overall Stats -->
  <div class="stat-card">
    <h2>Overall Statistics</h2>
    <div class="stat-grid">
      <div class="stat-box">
        <span class="stat-value"><%= totalStats.totalItems %></span>
        <span class="stat-label">Total Items</span>
      </div>
      <div class="stat-box">
        <span class="stat-value"><%= totalStats.totalQuantity %></span>
        <span class="stat-label">Total Units</span>
      </div>
      <div class="stat-box">
        <span class="stat-value"><%= Math.round(totalStats.avgQuantity * 10) / 10 %></span>
        <span class="stat-label">Avg Units/Item</span>
      </div>
      <div class="stat-box">
        <span class="stat-value"><%= totalStats.minQuantity %></span>
        <span class="stat-label">Min Stock</span>
      </div>
      <div class="stat-box">
        <span class="stat-value"><%= totalStats.maxQuantity %></span>
        <span class="stat-label">Max Stock</span>
      </div>
    </div>
  </div>
  
  <!-- Stock Level Distribution -->
  <div class="stat-card">
    <h2>Stock Level Distribution</h2>
    <div class="chart-section">
      <div class="stock-chart-container">
        <canvas id="stockLevelChart"></canvas>
      </div>
    </div>
    <div class="stock-details">
      <% quantityStats.forEach(level => { %>
        <div class="stock-level-box <%= level._id.stockLevel.toLowerCase().replace(' ', '-') %>">
          <h3><%= level._id.stockLevel %></h3>
          <p><strong><%= level.count %></strong> items</p>
          <ul>
            <% level.items.slice(0, 3).forEach(item => { %>
              <li><%= item.name %> - <%= item.quantity %> units</li>
            <% }) %>
            <% if (level.items.length > 3) { %>
              <li>... and <%= level.items.length - 3 %> more</li>
            <% } %>
          </ul>
        </div>
      <% }) %>
    </div>
  </div>
  
  <!-- Items by Owner -->
  <% if (ownerStats && ownerStats.length > 0) { %>
  <div class="stat-card">
    <h2>Items by Owner</h2>
    <div class="table-responsive">
      <table class="stats-table">
        <thead>
          <tr>
            <th>Owner</th>
            <th>Items</th>
            <th>Total Units</th>
            <th>Top Items</th>
          </tr>
        </thead>
        <tbody>
          <% ownerStats.forEach(owner => { %>
            <tr>
              <td><%= owner.owner %></td>
              <td><%= owner.totalItems %></td>
              <td><%= owner.totalQuantity %></td>
              <td>
                <% owner.items.slice(0, 2).forEach(item => { %>
                  <div><%= item.name %> (<%= item.quantity %>)</div>
                <% }) %>
                <% if (owner.items.length > 2) { %>
                  <div>... and <%= owner.items.length - 2 %> more</div>
                <% } %>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
  <% } %>

  <!-- Recently Added -->
  <% if (categoryDistribution && categoryDistribution.length > 0) { %>
  <div class="stat-card">
    <h2>Recently Added Items</h2>
    <div class="recent-items">
      <% categoryDistribution.forEach(item => { %>
        <div class="recent-item">
          <span class="item-name"><%= item.name %></span>
          <span class="item-quantity"><%= item.quantity %> units</span>
          <span class="item-age">Added <%= Math.floor(item.daysSinceCreation) %> days ago</span>
        </div>
      <% }) %>
    </div>
  </div>
  <% } %>
</div>

<!-- Add Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Stock Level Chart
  const stockData = [
    <% quantityStats.forEach(level => { %>
      { level: '<%= level._id.stockLevel %>', count: <%= level.count %> },
    <% }) %>
  ];
  
  // Create chart
  const ctx = document.getElementById('stockLevelChart').getContext('2d');
  const stockChart = new Chart(ctx, {
    type: 'pie',
    data: {
      labels: stockData.map(item => item.level),
      datasets: [{
        data: stockData.map(item => item.count),
        backgroundColor: [
          '#FF6B6B', // Red for low stock
          '#FFD166', // Yellow for medium stock
          '#06D6A0'  // Green for high stock
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false, // This is important for proper sizing
      plugins: {
        legend: {
          position: 'bottom',
        },
        title: {
          display: true,
          text: 'Items by Stock Level'
        }
      }
    }
  });
});
</script>

<style>
.stat-card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  padding: 20px;
  margin-bottom: 30px;
}

.stat-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 15px;
}

.stat-box {
  text-align: center;
  padding: 15px;
  border-radius: 5px;
  background-color: #f8f9fa;
}

.stat-value {
  display: block;
  font-size: 28px;
  font-weight: bold;
  color: var(--secondary-color);
}

.stat-label {
  display: block;
  font-size: 14px;
  color: #6c757d;
  margin-top: 5px;
}

.chart-section {
  margin: 20px 0 30px;
  display: flex;
  justify-content: center;
}

.stock-chart-container {
  height: 300px; /* Increased height */
  width: 500px; /* Fixed width */
  position: relative; /* Important for proper chart positioning */
  margin-bottom: 30px;
  border: 1px solid #e1e1e1;
  border-radius: 8px;
  padding: 10px;
  background: white;
  z-index: 1; /* Ensure chart appears above other elements */
}

.stock-details {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 15px;
  margin-top: 30px;
  border-top: 1px solid #e1e1e1;
  padding-top: 20px;
}

.stock-level-box {
  padding: 15px;
  border-radius: 5px;
}

.stock-level-box h3 {
  margin-top: 0;
  margin-bottom: 10px;
}

.stock-level-box ul {
  list-style-type: none;
  padding-left: 0;
}

.stock-level-box li {
  border: none;
  padding: 3px 0;
  display: block;
}

.low-stock {
  background-color: rgba(255, 107, 107, 0.2);
  border-left: 4px solid #FF6B6B;
}

.medium-stock {
  background-color: rgba(255, 209, 102, 0.2);
  border-left: 4px solid #FFD166;
}

.high-stock {
  background-color: rgba(6, 214, 160, 0.2);
  border-left: 4px solid #06D6A0;
}

.stats-table {
  width: 100%;
  border-collapse: collapse;
}

.stats-table th, .stats-table td {
  padding: 12px;
  text-align: left;
  border-bottom: 1px solid #e1e1e1;
}

.stats-table th {
  background-color: #f8f9fa;
  font-weight: bold;
}

.recent-items {
  display: grid;
  gap: 10px;
}

.recent-item {
  display: flex;
  justify-content: space-between;
  padding: 10px;
  background-color: #f8f9fa;
  border-radius: 4px;
}

.item-name {
  font-weight: bold;
}

.item-age {
  color: #6c757d;
  font-size: 0.9em;
}

.table-responsive {
  overflow-x: auto;
}
</style>